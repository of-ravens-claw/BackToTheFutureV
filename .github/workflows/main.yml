name: build
# Hardcoded mess, but it works, okay?

on:
  push:
    branches: [ dev ]
  pull_request:

env:
  # Hack, but it works.
  GTAPath: D:/a/BackToTheFutureV/bttfv-actions-data/

jobs:
  build:
    runs-on: windows-latest

    steps:
    # This is a hack, but I don't see any other choice.
    - name: Clone required libraries and set GTAPath for build. *THIS IS A HACK!*
      run: |
        cd "D:/a/BackToTheFutureV/"
        git clone --depth 1 https://github.com/audiorobscrackshack/bttfv-actions-data.git
        echo "GTAPath=D:/a/BackToTheFutureV/bttfv-actions-data/" >> $GITHUB_ENV
        cd "D:/a/BackToTheFutureV/BackToTheFutureV/"
        

    - name: Checkout code
      uses: actions/checkout@v3.5.2
      with:
        submodules: recursive

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Restore NuGet packages
      run: nuget restore BackToTheFutureV.sln

    # Debug being x64 and Release being Any CPU is a mystery to me...
    # So we're forcing MSBuild to build in x64;
    # I don't really see why to use Any CPU, it gives warnings, and GTA 5 is 64-bit.
    # Also apparently Release|x64 was still gonna build in Any CPU, for some reason...
    # I fixed that.
    # TODO: Add webhook.

    - name: Build solution - Release
      run: msbuild BackToTheFutureV.sln /p:Configuration=Release /p:Platform=x64 /verbosity:minimal

    - name: Build solution - Debug
      run: msbuild BackToTheFutureV.sln /p:Configuration=Debug /p:Platform=x64 /verbosity:minimal

    - name: Upload build artifact - Release
      uses: actions/upload-artifact@v3.1.2
      with:
        name: BackToTheFutureV - Release
        path: D:/a/BackToTheFutureV/BackToTheFutureV/BackToTheFutureV/bin/x64/Release

    - name: Upload build artifact - Debug
      uses: actions/upload-artifact@v3.1.2
      with:
        name: BackToTheFutureV - Debug
        path: D:/a/BackToTheFutureV/BackToTheFutureV/BackToTheFutureV/bin/x64/Debug

